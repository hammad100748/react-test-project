{"version":3,"sources":["components/Header/Header.js","UI/Select/Select.js","utilities/dateConvertor.js","components/ShowAdd.js","components/ProductItem/ProductItem.js","components/ProductList/ProductList.js","Common/ApiCall.js","UI/Loader/Loader.js","containers/Product/Product.js","App.js","serviceWorker.js","index.js"],"names":["header","react_default","a","createElement","className","options","value","label","SortInput","state","selectedOption","handleChange","_this","setState","props","handleSortInputChange","this","react_select_esm","onChange","Component","currencyFormatter","Intl","NumberFormat","style","currency","minimumFractionDigits","ShowAdd","_ref","getAddImageUrl","src","concat","alt","productItem","product","index","fontSize","size","face","format","price","date","seconds","Math","floor","Date","interval","toLocaleDateString","convertDateToRelative","components_ShowAdd","productList","products","map","lastIndex","ProductItem_ProductItem","key","id","getProducts","page","type","fetch","method","then","response","json","myJson","JSON","stringify","catch","err","Loader","Product","lastPageIndex","loadingState","sortBy","currentAdNumber","addImgUrl","showAdd","isProductsFinished","bottom","getMoreProducts","_callee","regenerator_default","wrap","_context","prev","next","parse","length","newProducts","clearInterval","console","log","stop","rand","random","_this2","setInterval","Object","asyncToGenerator","mark","_callee2","_context2","abrupt","sent","refs","iScroll","addEventListener","scrollTop","clientHeight","scrollHeight","isStateChanged","_this3","ref","height","overflow","ProductList_ProductList","marginLeft","UI_Loader_Loader","App","handleSortBy","Header_Header","Select_Select","containers_Product_Product","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iVAaeA,SAVA,WACb,OACEC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAChBH,EAAAC,EAAAC,cAAA,qCCFAE,SAAU,CACd,CAAEC,MAAO,QAASC,MAAO,SACzB,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,KAAMC,MAAO,QA+BTC,6MA3BbC,MAAQ,CACNC,eAAgB,QAElBC,aAAe,SAAAD,GACbE,EAAKC,SAAS,CAAEH,mBAChBE,EAAKE,MAAMC,sBAAsBL,EAAeJ,gFAGzC,IACCI,EAAmBM,KAAKP,MAAxBC,eACR,OACIT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACIX,MAAOI,EACPQ,SAAUF,KAAKL,aACfN,QAASA,aApBDc,qCCgBhBC,eAAoB,IAAIC,KAAKC,aAAa,QAAS,CACvDC,MAAO,WACPC,SAAU,MACVC,sBAAuB,KClBZC,EATC,SAAAC,GAAsB,IAApBC,EAAoBD,EAApBC,eAChB,OACE3B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAAb,wCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAAyByB,IAAG,gCAAAC,OAAkCF,KAAoBG,IAAK,SC2B7FC,EA5BK,SAAAL,GAAwC,IAArCM,EAAqCN,EAArCM,QAASC,EAA4BP,EAA5BO,MAAON,EAAqBD,EAArBC,eAErC,OACI3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACX8B,EAAQ,KAAO,GAAc,IAATA,EACpBjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,MAAIoB,MAAO,CAAEY,SAAUF,EAAQG,OAASH,EAAQI,OAElDpC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,0BAAhB,QACU6B,EAAQG,MAElBnC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BACbgB,EAAkBkB,OAAOL,EAAQM,QAEpCtC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAAb,aFpBkB,SAAAoC,GAC1B,IAAIC,EAAUC,KAAKC,OAAO,IAAIC,KAASJ,GAAQ,KAE3CK,EAAWH,KAAKC,MAAMF,EAAU,SAEpC,OAAII,EAAW,EACNL,EAAKM,sBAEdD,EAAWH,KAAKC,MAAMF,EAAU,QACjB,EACTI,EAAW,EACNL,EAAKM,qBAEPD,EAAW,SAEpBA,EAAWH,KAAKC,MAAMF,EAAU,OACjB,EACNI,EAAW,UAEpBA,EAAWH,KAAKC,MAAMF,EAAU,KACjB,EACNI,EAAW,WAEbH,KAAKC,MAAMF,GAAW,WEFRM,CAAsB,IAAIH,KAAKX,EAAQO,SAItDvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAC6C,EAAD,CAASpB,eAAgBA,OCLtBqB,EAjBK,SAACnC,GACnB,IAAMkB,EAAclB,EAAMoC,UACxBpC,EAAMoC,SAASC,IAAI,SAAClB,EAASC,GAC3B,OAAIA,EAAQpB,EAAMsC,UACTnD,EAAAC,EAAAC,cAACkD,EAAD,CACLC,IAAKrB,EAAQsB,GACbtB,QAASA,EACTL,eAAgBd,EAAMc,eACtBM,MAAOA,IACG,OAElB,OACEjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZ4B,ICfDwB,EAAc,SAACC,EAAKC,GACtB,OAAOC,MAHI,qCAGU,UAAA7B,OAAW2B,EAAX,qBAAA3B,OAAmC4B,GAAQ,CAC5DE,OAAQ,QAEPC,KAAK,SAAAC,GACJ,OAAOA,EAASC,SAEjBF,KAAK,SAASG,GACb,OAAOC,KAAKC,UAAUF,KAEvBG,MAAM,SAAAC,GACL,OAAOA,WCLFC,MANf,WACE,OACEpE,EAAAC,EAAAC,cAAA,KAAGC,UAAU,UAAb,gBAAmCH,EAAAC,EAAAC,cAAA,iBAAcF,EAAAC,EAAAC,cAAA,iBAAcF,EAAAC,EAAAC,cAAA,mBCmHpDmE,6MAjHb7D,MAAQ,CACNyC,SAAU,KACVO,KAAM,EACNc,cAAe,EACfC,cAAc,EACdC,OAAQ,GACRC,gBAAiB,KACjBC,UAAW,GACXC,SAAS,EACTC,oBAAoB,EACpBzB,UAAW,GACX0B,QAAQ,KAGVC,qCAAkB,SAAAC,IAAA,OAAAC,EAAA/E,EAAAgF,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChBzE,EAAKC,SAAS,CAAE2D,cAAc,EAAMf,KAAM7C,EAAKH,MAAMgD,KAAO,IAD5C0B,EAAAE,KAAA,EAEV7B,EAAY5C,EAAKH,MAAMgD,KAAM7C,EAAKH,MAAMgE,QAC3CZ,KAAK,SAAAX,GACJ,GAAIe,KAAKqB,MAAMpC,GAAUqC,OAAS,EAAG,CACnC,IAAIC,EAAc5E,EAAKH,MAAMyC,SAASpB,OAAOmC,KAAKqB,MAAMpC,IACxDtC,EAAKC,SAAS,CACZqC,SAAUsC,EACVhB,cAAc,SAGhBiB,cAAc7E,EAAKiC,UACnBjC,EAAKC,SAAS,CAAE2D,cAAc,EAAOK,oBAAoB,MAG5DV,MAAM,SAAAC,GAAG,OAAIsB,QAAQC,IAAIvB,KAfZ,wBAAAe,EAAAS,SAAAZ,EAAAhE,WAmElBY,eAAiB,WAEf,IADA,IAAIiE,EAAOnD,KAAKC,MAAsB,IAAhBD,KAAKoD,UACpBD,IAASjF,EAAKH,MAAMiE,iBACzBmB,EAAOnD,KAAKC,MAAsB,IAAhBD,KAAKoD,UAEzB,OAAOD,sFAtDW,IAAAE,EAAA/E,KAClBwC,EAAYxC,KAAKP,MAAMgD,KAAM,IAC1BI,KAAK,SAAAX,GACJ6C,EAAKlF,SAAS,CACZ0D,cAAewB,EAAKtF,MAAM8D,cAAgBN,KAAKqB,MAAMpC,GAAUqC,SAEjEQ,EAAKlF,SAAS,CAAEqC,SAAUe,KAAKqB,MAAMpC,KACrC6C,EAAKlD,SAAWmD,YAAWC,OAAAC,EAAA,EAAAD,CAAAhB,EAAA/E,EAAAiG,KACzB,SAAAC,IAAA,OAAAnB,EAAA/E,EAAAgF,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EAAkBU,EAAKhB,kBAAvB,cAAAsB,EAAAC,OAAA,SAAAD,EAAAE,MAAA,wBAAAF,EAAAT,SAAAQ,EAAApF,SACA,OAGHmD,MAAM,SAAAC,GAAG,OAAIsB,QAAQC,IAAIvB,KAE5BpD,KAAKwF,KAAKC,QAAQC,iBAAiB,SAAU,WAC3ChB,QAAQC,IAAII,EAAKS,KAAKC,SAEpBV,EAAKS,KAAKC,QAAQE,UAAYZ,EAAKS,KAAKC,QAAQG,aAAe,GAC/Db,EAAKS,KAAKC,QAAQI,eAEbd,EAAKjF,MAAM0D,cACduB,EAAKlF,SAAS,CACZuC,UAAW2C,EAAKtF,MAAM2C,UAAY,GAClC0D,gBAAgB,KAItB,IAAMhC,EACJiB,EAAKS,KAAKC,QAAQI,aAAed,EAAKS,KAAKC,QAAQE,YACnDZ,EAAKS,KAAKC,QAAQG,aAChB9B,IAAWiB,EAAKjF,MAAM0D,cAAgBuB,EAAKtF,MAAMoE,qBACnDa,QAAQC,IAAIb,GACZiB,EAAKlF,SAAS,CAAEiE,QAAQ,oFAKXL,qFACjBiB,QAAQC,IAAIlB,GACZzD,KAAKH,SAAS,CAAEqC,SAAU,OAC1BlC,KAAKH,SAAS,CAAE4D,OAAQA,aAClBjB,EAAYxC,KAAKP,MAAMgD,KAAMgB,GAChCZ,KAAK,SAAAX,GACJwC,QAAQC,IAAI1B,KAAKqB,MAAMpC,IACvB6D,EAAKlG,SAAS,CAAEqC,SAAUe,KAAKqB,MAAMpC,OAEtCiB,MAAM,SAAAC,GAAG,OAAIsB,QAAQC,IAAIvB,yIAY5B,OACEnE,EAAAC,EAAAC,cAAA,OAAK6G,IAAI,UAAUzF,MAAO,CAAE0F,OAAQ,QAASC,SAAU,SACrDjH,EAAAC,EAAAC,cAACgH,EAAD,CACE/D,UAAWpC,KAAKP,MAAM2C,UACtBF,SAAUlC,KAAKP,MAAMyC,SACrBsB,aAAcxD,KAAKP,MAAM+D,aACzB5C,eAAgBZ,KAAKY,iBAEtBZ,KAAKP,MAAM+D,cACVvE,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAE6F,WAAY,QACxBnH,EAAAC,EAAAC,cAACkH,EAAD,OAGHrG,KAAKP,MAAMqE,QACV7E,EAAAC,EAAAC,cAAA,OAAKoB,MAAO,CAAE6F,WAAY,QACxBnH,EAAAC,EAAAC,cAAA,0CA1GUgB,aCkBPmG,6MAfbvG,sBAAwB,SAAA2C,GACtB9C,EAAK4F,KAAKvE,QAAQsF,aAAa7D,4EAI/B,OACEzD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqH,EAAD,MACAvH,EAAAC,EAAAC,cAACsH,EAAD,CAAQ1G,sBAAuBC,KAAKD,wBACpCd,EAAAC,EAAAC,cAACuH,EAAD,CAASV,IAAI,oBAZH7F,aCOEwG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhI,EAAAC,EAAAC,cAAC+H,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1E,KAAK,SAAA2E,GACjCA,EAAaC","file":"static/js/main.f0819a82.chunk.js","sourcesContent":["import React from \"react\";\r\nimport  './Header.css'\r\n\r\nconst header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <p>\r\n      Products Grid\r\n      </p>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","import React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport './Select.css'\n\nconst options = [\n  { value: \"price\", label: \"Price\" },\n  { value: \"size\", label: \"Size\" },\n  { value: \"id\", label: \"ID\" }\n];\n\nclass SortInput extends Component {\n  state = {\n    selectedOption: null\n  };\n  handleChange = selectedOption => {\n    this.setState({ selectedOption });\n    this.props.handleSortInputChange(selectedOption.value);\n  };\n\n  render() {\n    const { selectedOption } = this.state;\n    return (\n        <div className=\"Select\">\n            <div className=\"Select--title\">\n                <h5>Sort by</h5>\n            </div>\n            <div className=\"Select--Input\">\n            <Select\n                value={selectedOption}\n                onChange={this.handleChange}\n                options={options}\n            />\n          </div>\n        </div>  \n    );\n  }\n}\n\nexport default SortInput;\n","const convertDateToRelative = date => {\n    var seconds = Math.floor((new Date() - date) / 1000);\n\n    var interval = Math.floor(seconds / 31536000);\n\n    if (interval > 1) {\n      return date.toLocaleDateString();\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval > 1) {\n      if (interval > 7) {\n        return date.toLocaleDateString();\n      }\n      return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval > 1) {\n      return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval > 1) {\n      return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n  };\n\n  const currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 2\n  });\n\nexport  {convertDateToRelative,currencyFormatter}","import React from 'react'\r\n\r\nconst ShowAdd = ({getAddImageUrl}) => {\r\n  return (\r\n    <div>\r\n      <p className=\"ProductItem--image-title\">But first, a word from our sponsors:</p>\r\n      <img className=\"ProductItem--image-pic\" src={`http://localhost:3000/ads/?r=${getAddImageUrl()}`} alt={\"Ad\"} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShowAdd\r\n","import React from \"react\";\nimport './ProductItem.css'\nimport {convertDateToRelative,currencyFormatter} from '../../utilities/dateConvertor'\nimport ShowAdd from \"../ShowAdd\";\n\nconst productItem = ({ product, index, getAddImageUrl }) => {\n\n  return (\n      <div className=\"ProductItem\">\n        {(index % 20 !== 0 || index ===0) ? (\n          <div className=\"ProductItem--card\">\n            <div className=\"ProductItem--card-title\">\n              <h3 style={{ fontSize: product.size }}>{product.face}</h3>\n            </div>\n            <span className=\"ProductItem--card-size\">\n                Size {product.size}\n            </span>\n            <span className=\"ProductItem--card-price\">\n              {currencyFormatter.format(product.price)}\n            </span>\n            <p className=\"ProductItem--card-date\">\n              Added On: {convertDateToRelative(new Date(product.date))}\n            </p>\n          </div>\n        ) : (\n          <div className=\"ProductItem--image\">            \n            <ShowAdd getAddImageUrl={getAddImageUrl} />\n          </div>\n        )}\n      </div>\n  );\n}\n\nexport default productItem;\n","import React from 'react'\nimport './ProductList.css'\nimport ProductItem from '../ProductItem/ProductItem'\n\nconst productList = (props) => {\n  const productItem = props.products &&\n    props.products.map((product, index) => {\n      if (index < props.lastIndex) {\n        return <ProductItem\n          key={product.id}          \n          product={product}\n          getAddImageUrl={props.getAddImageUrl}\n          index={index} />\n      } else return null\n    })\n  return (\n    <div className=\"ProductList\">\n      {productItem}      \n    </div>\n  )\n}\nexport default productList;\n","let BASE_URL = \"http://localhost:3000/api/products\";\r\n\r\nconst getProducts = (page,type) => {  \r\n    return fetch(BASE_URL+`?_page=${page}&_limit=10&_sort=${type}`, {\r\n        method: \"GET\",        \r\n      })\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(function(myJson) {\r\n          return JSON.stringify(myJson);\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        });\r\n}\r\n\r\n\r\nconst getAdds = (rand) => {    \r\n\r\n    return fetch(`http://localhost:3000/ads/?r=${rand}`, {\r\n        method: \"GET\",        \r\n      })\r\n        .then(response => {\r\n          return response.url;\r\n        })\r\n        .catch(err => {\r\n          return err;\r\n        });\r\n}\r\n\r\nexport {getProducts, getAdds};","import React from \"react\";\r\nimport './Loader.css'\r\nfunction Loader() {\r\n  return (\r\n    <p className=\"saving\">Loading Items<span>.</span><span>.</span><span>.</span></p>\r\n  );\r\n}\r\n\r\nexport default Loader;\r\n","import React, { Component } from \"react\";\nimport ProductList from \"../../components/ProductList/ProductList\";\nimport { getProducts } from \"../../Common/ApiCall\";\nimport Loader from \"../../UI/Loader/Loader\";\n\nclass Product extends Component {\n  state = {\n    products: null,\n    page: 1,\n    lastPageIndex: 0,\n    loadingState: false,\n    sortBy: \"\",\n    currentAdNumber: null,\n    addImgUrl: \"\",\n    showAdd: true,\n    isProductsFinished: false,\n    lastIndex: 10,\n    bottom: false\n  };\n\n  getMoreProducts = async () => {\n    this.setState({ loadingState: true, page: this.state.page + 1 });\n    await getProducts(this.state.page, this.state.sortBy)\n      .then(products => {\n        if (JSON.parse(products).length > 0) {\n          let newProducts = this.state.products.concat(JSON.parse(products));\n          this.setState({\n            products: newProducts,\n            loadingState: false\n          });\n        } else {\n          clearInterval(this.interval);\n          this.setState({ loadingState: false, isProductsFinished: true });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  componentDidMount() {\n    getProducts(this.state.page, \"\")\n      .then(products => {\n        this.setState({\n          lastPageIndex: this.state.lastPageIndex + JSON.parse(products).length\n        });\n        this.setState({ products: JSON.parse(products) });\n        this.interval = setInterval(\n          async () => await this.getMoreProducts(),\n          1000\n        );\n      })\n      .catch(err => console.log(err));\n\n    this.refs.iScroll.addEventListener(\"scroll\", () => {\n      console.log(this.refs.iScroll);\n      if (\n        this.refs.iScroll.scrollTop + this.refs.iScroll.clientHeight + 1 >=\n        this.refs.iScroll.scrollHeight\n      ) {\n        if (!this.props.loadingState) {\n          this.setState({\n            lastIndex: this.state.lastIndex + 10,\n            isStateChanged: true\n          });\n        }\n      }\n      const bottom =\n        this.refs.iScroll.scrollHeight - this.refs.iScroll.scrollTop ===\n        this.refs.iScroll.clientHeight;\n      if (bottom && !this.props.loadingState && this.state.isProductsFinished) {\n        console.log(bottom);\n        this.setState({ bottom: true });\n      }\n    });\n  }\n\n  async handleSortBy(sortBy) {\n    console.log(sortBy);\n    this.setState({ products: null });\n    this.setState({ sortBy: sortBy });\n    await getProducts(this.state.page, sortBy)\n      .then(products => {\n        console.log(JSON.parse(products));\n        this.setState({ products: JSON.parse(products) });\n      })\n      .catch(err => console.log(err));\n  }\n\n  getAddImageUrl = () => {\n    let rand = Math.floor(Math.random() * 1000);\n    while (rand === this.state.currentAdNumber) {\n      rand = Math.floor(Math.random() * 1000);\n    }        \n    return rand;\n  };\n\n  render() {\n    return (\n      <div ref=\"iScroll\" style={{ height: \"550px\", overflow: \"auto\" }}>\n        <ProductList\n          lastIndex={this.state.lastIndex}\n          products={this.state.products}\n          loadingState={this.state.loadingState}\n          getAddImageUrl={this.getAddImageUrl}\n        />\n        {this.state.loadingState && (\n          <div style={{ marginLeft: \"50%\" }}>\n            <Loader />\n          </div>\n        )}\n        {this.state.bottom && (\n          <div style={{ marginLeft: \"50%\" }}>\n            <p>~ end of catalogue ~</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Product;\n","import React, { Component } from \"react\";\nimport Header from \"./components/Header/Header\";\nimport Select from \"./UI/Select/Select\"\nimport Product from './containers/Product/Product'\n\nclass App extends Component {\n    \n  \n  handleSortInputChange = type => {\n    this.refs.product.handleSortBy(type)       \n  }\n\n  render() {        \n    return (\n      <div>\n        <Header />   \n        <Select handleSortInputChange={this.handleSortInputChange} />\n        <Product ref='product' />                     \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}